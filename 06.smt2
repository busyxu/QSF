(declare-fun alpha1_ack!5896 () (_ BitVec 64))
(declare-fun beta_ack!5897 () (_ BitVec 64))
(declare-fun mu_ack!5898 () (_ BitVec 32))
(declare-fun nu_ack!5899 () (_ BitVec 32))
(declare-fun limit_ack!5895 () (_ BitVec 64))
(declare-fun a_ack!5900 () (_ BitVec 64))
(declare-fun b_ack!5893 () (_ BitVec 64))
(declare-fun epsabs_ack!5894 () (_ BitVec 64))
(assert (not (fp.lt ((_ to_fp 11 53) alpha1_ack!5896)
            ((_ to_fp 11 53) #xbff0000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) beta_ack!5897)
            ((_ to_fp 11 53) #xbff0000000000000))))
(assert (not (= #x00000000 mu_ack!5898)))
(assert (= #x00000001 mu_ack!5898))
(assert (= #x00000000 nu_ack!5899))
(assert (not (bvult #x00000000000003e8 limit_ack!5895)))
(assert (not (fp.leq ((_ to_fp 11 53) b_ack!5893) ((_ to_fp 11 53) a_ack!5900))))
(assert (not (fp.leq ((_ to_fp 11 53) epsabs_ack!5894)
             ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.eq ((_ to_fp 11 53) a_ack!5900) ((_ to_fp 11 53) a_ack!5900)))
(assert (not (not (fp.eq ((_ to_fp 11 53) alpha1_ack!5896)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000000 mu_ack!5898)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (not (fp.eq ((_ to_fp 11 53) beta_ack!5897)
                 ((_ to_fp 11 53) #x0000000000000000)))))
(assert (not (= #x00000001 nu_ack!5899)))
(assert (not (= #x00000000 mu_ack!5898)))
(assert (let ((a!1 (fp.eq (fp.mul roundNearestTiesToEven
                          ((_ to_fp 11 53) #x3fe0000000000000)
                          (fp.add roundNearestTiesToEven
                                  ((_ to_fp 11 53) a_ack!5900)
                                  ((_ to_fp 11 53) b_ack!5893)))
                  ((_ to_fp 11 53) a_ack!5900))))
  (not a!1)))
(assert (not (fp.eq ((_ to_fp 11 53) b_ack!5893) ((_ to_fp 11 53) b_ack!5893))))

(check-sat)
(exit)
